package storage

import (
	//"database/sql"
	"fmt"

	m "{{.ProjectPath}}/internal/middleware"
	_ "github.com/go-sql-driver/mysql"
	"github.com/jmoiron/sqlx"
	"{{.ProjectPath}}/config"
)

var MysqlDB *sqlx.DB
var mySqlConnection string

func MySqlInit() *sqlx.DB {
	if MysqlDB == nil {
		mySqlConnection = GetMySqlConnection()
		var err error
		MysqlDB, err = sqlx.Connect("mysql", mySqlConnection)
		if err != nil {
			m.Default.Panicf("Could not connect to the DB host: %s*****; %s", string(config.DBHost[:6]), err)
		}
	}
	return MysqlDB
}

func GetMySqlConnection() string {
	mySqlConnection = fmt.Sprintf("%s:%s@tcp(%s)/%s?charset=utf8mb4&parseTime=True", config.DBUser, config.DBPass, config.DBHost, config.DBDB)
	if config.DBPass == "" {
		mySqlConnection = fmt.Sprintf("%s@tcp(%s)/%s?charset=utf8mb4&parseTime=True", config.DBUser, config.DBHost, config.DBDB)
	}
	return mySqlConnection
}

func FormatPagination(limit, offset int) string {
	if limit == 0 {
		return ""
	}
	return fmt.Sprintf("LIMIT %d, %d", offset, limit)
}