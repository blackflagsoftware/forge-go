package storage

import (
	"fmt"

	m "{{.ProjectPath}}/internal/middleware"
	"github.com/jmoiron/sqlx"
	"{{.ProjectPath}}/config"
	_ "github.com/mattn/go-sqlite3"
)

var SqliteDB *sqlx.DB
var sqliteConnection string

func SqliteInit() *sqlx.DB {
	if SqliteDB == nil {
		var err error
		sqliteConnection = fmt.Sprintf("%s?cache=shared&mode=wrc", config.SqlitePath)
		SqliteDB, err = sqlx.Open("sqlite3", sqliteConnection)
		if err != nil {
			m.Default.Panicf("Could not connect to the DB host: %s*****; %s", sqliteConnection[:6], err)
		}
		SqliteDB.SetMaxOpenConns(1)
	}
	return SqliteDB
}

func FormatPagination(limit, offset int) string {
	if limit == 0 {
		return ""
	}
	return fmt.Sprintf("LIMIT %d, %d", offset, limit)
}