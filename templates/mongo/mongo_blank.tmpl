package {{.CurrentEntity.AllLower}}

import (
	"context"

	ae "{{.ProjectPath}}/internal/api_error"
	stor "{{.ProjectPath}}/internal/storage"
	"go.mongodb.org/mongo-driver/bson"
	"go.mongodb.org/mongo-driver/mongo"
)

type (
	Mongo{{.CurrentEntity.Camel}} struct {
		DB *mongo.Client
	}
)

func InitMongo() *Mongo{{.CurrentEntity.Camel}} {
	db := stor.MongoInit()
	return &Mongo{{.CurrentEntity.Camel}}{DB: db}
}

func (d *Mongo{{.CurrentEntity.Camel}}) Read({{.CurrentEntity.Abbr}} *{{.CurrentEntity.Camel}}) error {
	return nil
}

func (d *Mongo{{.CurrentEntity.Camel}}) ReadAll({{.CurrentEntity.Abbr}} *[]{{.CurrentEntity.Camel}}) error {
	return nil
}

func (d *Mongo{{.CurrentEntity.Camel}}) Create({{.CurrentEntity.Abbr}} *{{.CurrentEntity.Camel}}) error {
	return nil
}

func (d *Mongo{{.CurrentEntity.Camel}}) Update({{.CurrentEntity.Abbr}} *{{.CurrentEntity.Camel}}) error {
	return nil
}

func (d *Mongo{{.CurrentEntity.Camel}}) Delete({{.CurrentEntity.Abbr}} *{{.CurrentEntity.Camel}}) error {
	return nil
}
