package email

import (
	"fmt"
	"net/smtp"

	"{{.ProjectPath}}/config"
	m "{{.ProjectPath}}/internal/middleware"
)

//go:generate mockgen -source=email.go -destination=mock.go -package=email
type (
	Emailer interface {
		SendReset(string, string) error
	}

	Email struct{}
)

func (e Email) SendReset(toEmail, resetToken string) error {
	from := config.LoginEmailFrom
	pwd := config.LoginEmailPwd
	host := config.LoginEmailHost
	port := config.GetEmailPort()

	auth := smtp.PlainAuth("", from, pwd, host)
	to := []string{toEmail}
	msg := []byte(fmt.Sprintf("To: %s\r\nSubject: Reset Password Instructions\r\n\r\nTo reset your password: %s&email=%s&token=%s\r\n", toEmail, config.LoginEmailResetUrl, toEmail, resetToken))
	if err := smtp.SendMail(fmt.Sprintf("%s:%d", host, port), auth, from, to, msg); err != nil {
		m.Default.Println("unable to send email:", err)
		return err
	}
	return nil
}
